from random import choice

from aiogram.utils.markdown import hbold


def count_length(text: str) -> str:
    reference_text = "–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  "
    space_per_char = 1.5  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –Ω–∞ —Å–∏–º–≤–æ–ª (–ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏)

    diff = len(reference_text) - len(text)
    spaces = int(diff * space_per_char)

    return ' ' * max(spaces, 0) + '  ' + '  '

# GLOBAL
rand_animal_emoji = lambda : choice(['ü¶Ö', 'üêù', 'üê•', 'üê®', 'ü¶Å', 'üê∞', 'ü¶ä', 'üêº', 'üê∑', 'üê∏', 'üêô', 'ü¶ñ', 'üê≥', 'üê¨', 'üêä', 'ü¶ß', 'üêâ', 'üêÅ', 'ü¶•', 'ü¶©', 'ü¶ú', 'ü¶§'])


#GREET
GREET_TEXT = [hbold("What's up bro ‚úã"), f'–Ø –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ {rand_animal_emoji()}']


#FINANCES
pretty_courses_test = lambda data: \
f'''
USD üíµ
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  –ë–∞–Ω–∫ –ø—Ä–æ–¥–∞–µ—Ç
{data["USD_in"]}{count_length(str(data["USD_in"]))}{data["USD_out"]}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

EUR üí∂
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  –ë–∞–Ω–∫ –ø—Ä–æ–¥–∞–µ—Ç
{data["EUR_in"]}{count_length(str(data["EUR_in"]))}{data["EUR_out"]}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî


RUB / BUN üí∏
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  –ë–∞–Ω–∫ –ø—Ä–æ–¥–∞–µ—Ç
{data["RUB_in"]}{count_length(str(data["RUB_in"]))}{data["RUB_out"]}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî


USD -> RUB (–∫–æ–Ω–≤–µ—Ä—Å–∏—è) üí∞
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  –ë–∞–Ω–∫ –ø—Ä–æ–¥–∞–µ—Ç
{data["USD_RUB_in"]}{count_length(str(data["USD_RUB_in"]))}{data["USD_RUB_out"]}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

RUB -> EUR (–∫–æ–Ω–≤–µ—Ä—Å–∏—è) üí∞
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ë–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç  –ë–∞–Ω–∫ –ø—Ä–æ–¥–∞–µ—Ç
{data["RUB_EUR_in"]}{count_length(str(data["RUB_EUR_in"]))}{data["RUB_EUR_out"]}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
'''


# ERROR Texts
WRONG_TEXT = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ü•≤ ..."


# Currency text
CALCULATE_MENU = hbold('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É)')
CURRENCY_TEXT = lambda curr: f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {hbold(curr)}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:'
CURRENCY_TEXT2 = lambda curr_name, action, curr_value: (f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {hbold(curr_name)} \n'
                                                f'({hbold(action)} –ø–æ –∫—É—Ä—Å—É = {hbold(curr_value)})\n\n'
                                                        f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ...')
currency_dict = {
    'USD_in': '$',
    'USD_out': 'Br',

    'EUR_in': '‚Ç¨',
    'EUR_out': 'Br',

    'RUB_in': '‚ÇΩ',
    'RUB_out': 'Br',

    'USD_RUB_in': '$',
    'USD_RUB_out': '‚ÇΩ',

    'RUB_EUR_in': '‚ÇΩ',
    'RUB_EUR_out': '‚Ç¨',
}


#Check_in text
START_CHECK_IN_TEXT = lambda res: "–í–æ—Ç –≤—Å–µ –≤–∞—à–∏ 'check_in':" if res else "–£ –≤–∞—Å –Ω–µ—Ç 'check_in', —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å check_in')"
